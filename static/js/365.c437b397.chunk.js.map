{"version":3,"file":"static/js/365.c437b397.chunk.js","mappings":"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","sources":["components/EmptyImage/EmptyImage.tsx","webpack://movie-portal/./src/widgets/FavoritesButton/FavoritesButton.module.scss?7372","widgets/FavoritesButton/FavoritesButton.tsx","webpack://movie-portal/./src/components/MovieItem/MovieItem.module.scss?bf85","components/MovieItem/MovieItem.tsx","pages/MoviePage/MoviePage.tsx","shared/lib/favorites.ts"],"sourcesContent":["const EmptyImage = () => (\n  <div>\n    <svg\n      fill=\"#777576\"\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke=\"#777576\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <path d=\"M30,3.4141,28.5859,2,2,28.5859,3.4141,30l2-2H26a2.0027,2.0027,0,0,0,2-2V5.4141ZM26,26H7.4141l7.7929-7.793,2.3788,2.3787a2,2,0,0,0,2.8284,0L22,19l4,3.9973Zm0-5.8318-2.5858-2.5859a2,2,0,0,0-2.8284,0L19,19.1682l-2.377-2.3771L26,7.4141Z\" />\n      <path d=\"M6,22V19l5-4.9966,1.3733,1.3733,1.4159-1.416-1.375-1.375a2,2,0,0,0-2.8284,0L6,16.1716V6H22V4H6A2.002,2.002,0,0,0,4,6V22Z\" />\n    </svg>\n  </div>\n);\n\nexport default EmptyImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"favButton\":\"FavoritesButton_favButton__1LzJ+\"};","import { FC, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { IMovieDetails } from '../../shared/models/IMovieDetails';\nimport { addToFavorites, removeFromFavorites } from '../../shared/lib/favorites';\nimport classes from './FavoritesButton.module.scss';\n\ninterface FavoritesButtonProps {\n  movie: IMovieDetails;\n  isFavorite: boolean;\n  login: string;\n}\n\nconst FavoritesButton: FC<FavoritesButtonProps> = ({ movie, login, isFavorite }) => {\n  const [isFavoriteState, setIsFavoriteState] = useState(isFavorite);\n  const navigate = useNavigate();\n  const handleClickButton = () => {\n    if (!login) {\n      navigate('/login');\n    } else {\n      if (!isFavorite) {\n        addToFavorites(login, movie);\n      } else {\n        removeFromFavorites(login, movie);\n      }\n      setIsFavoriteState(!isFavoriteState);\n    }\n  };\n  return (\n    <button type=\"button\" className={classes.favButton} onClick={handleClickButton}>\n      {!isFavoriteState ? 'Add to favorites' : 'Remove from favorites'}\n    </button>\n  );\n};\n\nexport default FavoritesButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieItem_movieContainer__Fngbo\",\"top\":\"MovieItem_top__jGOv-\",\"plot\":\"MovieItem_plot__yqLMQ\",\"about\":\"MovieItem_about__WwhOo\",\"infoItem\":\"MovieItem_infoItem__hgl6+\",\"infoKey\":\"MovieItem_infoKey__W+Z8W\",\"ratingUl\":\"MovieItem_ratingUl__UYiy6\",\"raitingLi\":\"MovieItem_raitingLi__yxFUq\",\"topLeft\":\"MovieItem_topLeft__v4YCq\",\"raitings\":\"MovieItem_raitings__PaZwH\"};","import { FC } from 'react';\nimport { IMovieDetails } from '../../shared/models/IMovieDetails';\nimport { classNames } from '../../shared/lib/classNames';\nimport { checkIsFavorite } from '../../shared/lib/favorites';\nimport FavoritesButton from '../../widgets/FavoritesButton/FavoritesButton';\nimport EmptyImage from '../EmptyImage/EmptyImage';\nimport classes from './MovieItem.module.scss';\n\ninterface MovieContainerProps {\n  movie: IMovieDetails;\n  login: string;\n}\n\nconst MovieItem: FC<MovieContainerProps> = ({ movie, login }) => {\n  const isFavorite = checkIsFavorite(login, movie.imdbID);\n  return (\n    <section className={classNames('', {}, [classes.movieContainer])}>\n      <div className={classes.top}>\n        <div className={classes.topLeft}>\n          <div>\n            {movie.Poster === 'N/A' ? <EmptyImage /> : <img src={movie.Poster} alt={movie.Title} />}\n          </div>\n        </div>\n\n        <div className={classes.topRight}>\n          <div>\n            <h2>\n              {movie.Title} ({movie.Year})\n            </h2>\n\n            <p className={classes.plot}>{movie.Plot}</p>\n\n            <FavoritesButton movie={movie} login={login} isFavorite={isFavorite} />\n          </div>\n\n          <div className={classes.about}>\n            <h3>About the {movie.Type}</h3>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Genre:</span>\n              <span className={classes.infoValue}>{movie.Genre}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Released:</span>\n              <span className={classes.infoValue}>{movie.Released}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Runtime:</span>\n              <span className={classes.infoValue}>{movie.Runtime}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Director:</span>\n              <span className={classes.infoValue}>{movie.Director}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Writer:</span>\n              <span className={classes.infoValue}>{movie.Writer}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Actors:</span>\n              <span className={classes.infoValue}>{movie.Actors}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Language:</span>\n              <span className={classes.infoValue}>{movie.Language}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Country:</span>\n              <span className={classes.infoValue}>{movie.Country}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Rated:</span>\n              <span className={classes.infoValue}>{movie.Rated}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Awards:</span>\n              <span className={classes.infoValue}>{movie.Awards}</span>\n            </div>\n\n            <div className={classNames(classes.infoItem, {}, [classes.raitings])}>\n              <span className={classes.infoKey}>Ratings:</span>\n              <ul className={classes.ratingUl}>\n                {movie.Ratings.map((rating) => (\n                  <li\n                    className={classNames('', {}, [classes.infoItem, classes.raitingLi])}\n                    key={rating.Value}\n                  >\n                    <span className={classes.infoKey}>{rating.Source}:</span>\n                    <span className={classes.infoValue}>{rating.Value}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Metascore:</span>\n              <span className={classes.infoValue}>{movie.Metascore}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>imdbRating:</span>\n              <span className={classes.infoValue}>{movie.imdbRating}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>imdbVotes:</span>\n              <span className={classes.infoValue}>{movie.imdbVotes}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Type:</span>\n              <span className={classes.infoValue}>{movie.Type}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>DVD:</span>\n              <span className={classes.infoValue}>{movie.DVD}</span>\n            </div>\n\n            <div className={classes.infoItem}>\n              <span className={classes.infoKey}>Box Office:</span>\n              <span className={classes.infoValue}>{movie.BoxOffice}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default MovieItem;\n","import { useParams } from 'react-router-dom';\nimport { useGetMovieByIdQuery } from '../../services/OMDbAPIService';\nimport MovieItem from '../../components/MovieItem/MovieItem';\nimport PageLoader from '../../widgets/PageLoader/PageLoader';\nimport { useAppSelector } from '../../shared/hooks/redux';\n\nconst MoviePage = () => {\n  const { login } = useAppSelector((state) => state.userReducer);\n  const params = useParams();\n  const { data, isFetching } = useGetMovieByIdQuery({ movieId: params.id });\n\n  if (isFetching) {\n    return <PageLoader />;\n  }\n\n  if (!data) {\n    return <div>No data</div>;\n  }\n\n  return <MovieItem movie={data} login={login} />;\n};\n\nexport default MoviePage;\n","import { IMovieDetails } from '../models/IMovieDetails';\n\nconst LSFavKey = 'favorites';\n\nexport const getFavorites = (login: string): IMovieDetails[] =>\n  JSON.parse(localStorage.getItem(`${login}-${LSFavKey}`)) || [];\n\nexport const checkIsFavorite = (login: string, id: string) => {\n  const favorites = getFavorites(login);\n  if (favorites) {\n    return favorites.some((movie) => movie.imdbID === id);\n  }\n  return false;\n};\n\nexport const addToFavorites = (login: string, movie: IMovieDetails) => {\n  const favorites = getFavorites(login);\n  if (!favorites) {\n    localStorage.setItem(`${login}-${LSFavKey}`, JSON.stringify([movie]));\n  } else {\n    favorites.push(movie);\n    localStorage.setItem(`${login}-${LSFavKey}`, JSON.stringify(favorites));\n  }\n};\n\nexport const removeFromFavorites = (login: string, movie: IMovieDetails) => {\n  const favorites = getFavorites(login);\n  const filteredFavorites = favorites.filter((favMovie) => favMovie.imdbID !== movie.imdbID);\n  localStorage.setItem(`${login}-${LSFavKey}`, JSON.stringify(filteredFavorites));\n};\n\nexport const chunkArray = <T>(arr: T[], size: number): T[][] =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (_, index) =>\n    arr.slice(index * size, index * size + size)\n  );\n"],"names":["EmptyImage","_jsx","children","_jsxs","fill","viewBox","xmlns","stroke","width","height","d","_ref","movie","login","isFavorite","isFavoriteState","setIsFavoriteState","useState","navigate","useNavigate","type","className","classes","onClick","handleClickButton","removeFromFavorites","addToFavorites","checkIsFavorite","imdbID","classNames","movieContainer","top","topLeft","Poster","src","alt","Title","topRight","Year","plot","Plot","FavoritesButton","about","Type","infoItem","infoKey","infoValue","Genre","Released","Runtime","Director","Writer","Actors","Language","Country","Rated","Awards","raitings","ratingUl","Ratings","map","rating","raitingLi","Source","Value","Metascore","imdbRating","imdbVotes","DVD","BoxOffice","MoviePage","useAppSelector","state","userReducer","params","useParams","data","isFetching","useGetMovieByIdQuery","movieId","id","PageLoader","MovieItem","LSFavKey","getFavorites","JSON","parse","localStorage","getItem","concat","favorites","some","push","setItem","stringify","filteredFavorites","filter","favMovie","chunkArray","arr","size","Array","from","length","Math","ceil","_","index","slice"],"sourceRoot":""}