{"version":3,"file":"static/js/582.acc8473a.chunk.js","mappings":"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","sources":["components/EmptyImage/EmptyImage.tsx","webpack://movie-portal/./src/components/MovieCard/MovieCard.module.scss?a853","components/MovieCard/MovieCard.tsx","webpack://movie-portal/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.tsx","pages/FavoritesPage/FavoritesPage.tsx","shared/lib/favorites.ts"],"sourcesContent":["const EmptyImage = () => (\n  <div>\n    <svg\n      fill=\"#777576\"\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke=\"#777576\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <path d=\"M30,3.4141,28.5859,2,2,28.5859,3.4141,30l2-2H26a2.0027,2.0027,0,0,0,2-2V5.4141ZM26,26H7.4141l7.7929-7.793,2.3788,2.3787a2,2,0,0,0,2.8284,0L22,19l4,3.9973Zm0-5.8318-2.5858-2.5859a2,2,0,0,0-2.8284,0L19,19.1682l-2.377-2.3771L26,7.4141Z\" />\n      <path d=\"M6,22V19l5-4.9966,1.3733,1.3733,1.4159-1.416-1.375-1.375a2,2,0,0,0-2.8284,0L6,16.1716V6H22V4H6A2.002,2.002,0,0,0,4,6V22Z\" />\n    </svg>\n  </div>\n);\n\nexport default EmptyImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"MovieCard_movieLink__1sv41\",\"movieCard\":\"MovieCard_movieCard__-90Pl\",\"posterContainer\":\"MovieCard_posterContainer__GxnM7\"};","import React, { FC } from 'react';\nimport { IMovie } from '../../shared/models/IMovie';\nimport { AppLink } from '../AppLink/AppLink';\nimport classes from './MovieCard.module.scss';\nimport EmptyImage from '../EmptyImage/EmptyImage';\n\ninterface MovieCardProps extends IMovie {}\n\nconst MovieCard: FC<MovieCardProps> = (props) => {\n  const { Poster, Title, Type, Year, imdbID } = props;\n  return (\n    <AppLink to={`/movie/${imdbID}`} className={classes.movieLink}>\n      <article className={classes.movieCard}>\n        <div className={classes.posterContainer}>\n          {Poster === 'N/A' ? <EmptyImage /> : <img src={Poster} alt={Title} />}\n        </div>\n        <h4>{Title}</h4>\n        <div>\n          <span>Year: </span>\n          <span>{Year}</span>\n        </div>\n        <div>\n          <span>Type: </span>\n          <span>{Type}</span>\n        </div>\n      </article>\n    </AppLink>\n  );\n};\n\nexport const MovieCardMemo = React.memo(MovieCard);\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__kdobN\",\"ul\":\"Pagination_ul__WWL1p\",\"li\":\"Pagination_li__TrgUd\",\"button\":\"Pagination_button__knGz5\",\"buttonUsable\":\"Pagination_buttonUsable__tB3lR\",\"active\":\"Pagination_active__4SC-z\"};","import React, { FC } from 'react';\nimport { classNames } from '../../shared/lib/classNames';\nimport classes from './Pagination.module.scss';\n\ninterface PaginationProps {\n  page: number;\n  limit: number;\n  count: number;\n  indent: number;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Pagination: FC<PaginationProps> = (props) => {\n  const { count, indent, limit, onClick, page } = props;\n  // Количество страниц\n  const length = Math.ceil(count / Math.max(limit, 1));\n  // Номера слева и справа относительно активного номера, которые остаются видимыми\n  let left = Math.max(page - indent, 1);\n  const right = Math.min(left + indent * 2, length);\n  // Корректировка когда страница в конце\n  left = Math.max(right - indent * 2, 1);\n\n  // Массив номеров\n  const items = [];\n  // Первая страница всегда нужна\n  if (left > 1) items.push(1);\n  // Пропуск\n  if (left > 2) items.push(null);\n  // Последовательность страниц\n  for (let pageNumber = left; pageNumber <= right; pageNumber += 1) items.push(pageNumber);\n  // Пропуск\n  if (right < length - 1) items.push(null);\n  // Последняя страница\n  if (right < length) items.push(length);\n  return (\n    <div className={classNames('', {}, [classes.pagination])}>\n      <ul className={classNames('', {}, [classes.ul])}>\n        {items.map((number, index) => (\n          <li\n            key={number !== null ? number : `null-${index}`}\n            className={classNames('', { [classes.pointer]: number !== null }, [classes.li])}\n          >\n            {number ? (\n              <button\n                type=\"button\"\n                className={classNames('', { [classes.active]: number === page }, [\n                  classes.button,\n                  classes.buttonUsable,\n                ])}\n                value={number}\n                onClick={onClick}\n              >\n                {number}\n              </button>\n            ) : (\n              <button type=\"button\" className={classNames('', {}, [classes.button])}>\n                ...\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Pagination;\n","import { useState } from 'react';\nimport { chunkArray, getFavorites } from '../../shared/lib/favorites';\nimport { MovieCardMemo } from '../../components/MovieCard/MovieCard';\nimport { classNames } from '../../shared/lib/classNames';\nimport { IMovieDetails } from '../../shared/models/IMovieDetails';\nimport { useAppSelector } from '../../shared/hooks/redux';\nimport Pagination from '../../components/Pagination/Pagination';\n\ninterface IFavoritesState {\n  page: number;\n  count: number;\n  favorites: IMovieDetails[][];\n}\n\nconst FavoritesPage = () => {\n  const { login } = useAppSelector((state) => state.userReducer);\n  const favMovies = getFavorites(login);\n  const pageLimit = 10;\n  const [favoritesState, setFavoritesState] = useState<IFavoritesState>({\n    page: 1,\n    count: favMovies.length,\n    favorites: chunkArray(favMovies, pageLimit),\n  });\n\n  if (!favMovies || favMovies.length === 0) {\n    return (\n      <div className=\"no-favorites\">\n        <h2>No favorites</h2>\n      </div>\n    );\n  }\n\n  const handleClickPagination = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const buttonValue = Number(e.currentTarget.value);\n    if (buttonValue) {\n      setFavoritesState((state) => ({ ...state, page: buttonValue }));\n    }\n  };\n\n  return (\n    <div className=\"\">\n      <div className={classNames('movies-list')}>\n        {favoritesState.favorites[favoritesState.page - 1].map((movie) => (\n          <MovieCardMemo {...movie} key={movie.imdbID} />\n        ))}\n      </div>\n      <Pagination\n        count={favoritesState.count}\n        indent={2}\n        limit={pageLimit}\n        page={favoritesState.page}\n        onClick={handleClickPagination}\n      />\n    </div>\n  );\n};\n\nexport default FavoritesPage;\n","import { IMovieDetails } from '../models/IMovieDetails';\n\nconst LSFavKey = 'favorites';\n\nexport const getFavorites = (login: string): IMovieDetails[] =>\n  JSON.parse(localStorage.getItem(`${login}-${LSFavKey}`)) || [];\n\nexport const checkIsFavorite = (login: string, id: string) => {\n  const favorites = getFavorites(login);\n  if (favorites) {\n    return favorites.some((movie) => movie.imdbID === id);\n  }\n  return false;\n};\n\nexport const addToFavorites = (login: string, movie: IMovieDetails) => {\n  const favorites = getFavorites(login);\n  if (!favorites) {\n    localStorage.setItem(`${login}-${LSFavKey}`, JSON.stringify([movie]));\n  } else {\n    favorites.push(movie);\n    localStorage.setItem(`${login}-${LSFavKey}`, JSON.stringify(favorites));\n  }\n};\n\nexport const removeFromFavorites = (login: string, movie: IMovieDetails) => {\n  const favorites = getFavorites(login);\n  const filteredFavorites = favorites.filter((favMovie) => favMovie.imdbID !== movie.imdbID);\n  localStorage.setItem(`${login}-${LSFavKey}`, JSON.stringify(filteredFavorites));\n};\n\nexport const chunkArray = <T>(arr: T[], size: number): T[][] =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (_, index) =>\n    arr.slice(index * size, index * size + size)\n  );\n"],"names":["EmptyImage","_jsx","children","_jsxs","fill","viewBox","xmlns","stroke","width","height","d","MovieCard","props","Poster","Title","Type","Year","imdbID","AppLink","to","concat","className","classes","src","alt","MovieCardMemo","React","count","indent","limit","onClick","page","length","Math","ceil","max","left","right","min","items","push","pageNumber","classNames","pagination","ul","map","number","index","pointer","li","type","active","button","buttonUsable","value","FavoritesPage","login","useAppSelector","state","userReducer","favMovies","getFavorites","favoritesState","setFavoritesState","useState","favorites","chunkArray","movie","_createElement","key","Pagination","e","buttonValue","Number","currentTarget","LSFavKey","JSON","parse","localStorage","getItem","checkIsFavorite","id","some","addToFavorites","setItem","stringify","removeFromFavorites","filteredFavorites","filter","favMovie","arr","size","Array","from","_","slice"],"sourceRoot":""}