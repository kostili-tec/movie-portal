{"version":3,"file":"static/js/939.af3f4f0d.chunk.js","mappings":"uIAAA,MAgBA,EAhBmBA,KACjBC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OACEC,KAAK,UACLC,QAAQ,YACRC,MAAM,6BACNC,OAAO,UACPC,MAAM,OACNC,OAAO,OAAMP,SAAA,EAEbD,EAAAA,EAAAA,KAAA,QAAMS,EAAE,8OACRT,EAAAA,EAAAA,KAAA,QAAMS,EAAE,iI,6CCVd,QAA4B,6BAA5B,EAAiE,yBAAjE,EAAkG,yB,qBCclG,MAuBA,EAvBuCC,IACrC,MAAM,aAAEC,EAAY,MAAEC,EAAK,SAAEC,EAAQ,KAAEC,EAAI,YAAEC,EAAW,KAAEC,EAAI,aAAEC,EAAY,SAAEhB,GAAaS,EACrFQ,GAAKC,EAAAA,EAAAA,SACX,OACEjB,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAkBpB,SAAA,EAChCD,EAAAA,EAAAA,KAAA,SAAOoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAAiBE,QAASL,EAAGjB,SAChEW,KAEHZ,EAAAA,EAAAA,KAAA,SACEoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAC/BP,KAAMA,EACNI,GAAIA,EACJP,aAAcA,EACdE,SAAUA,EACVE,YAAaA,EACbC,KAAMA,EACNC,aAAcA,IAEfhB,IACG,C,sDCjCV,QAA4B,6BAA5B,EAAqE,6BAArE,EAAoH,mC,qBCOpH,MAAMuB,EAAiCd,IACrC,MAAM,OAAEe,EAAM,MAAEC,EAAK,KAAEC,EAAI,KAAEC,EAAI,OAAEC,GAAWnB,EAC9C,OACEV,EAAAA,EAAAA,KAAC8B,EAAAA,EAAO,CAACC,GAAE,UAAAC,OAAYH,GAAUT,UAAWC,EAAkBpB,UAC5DC,EAAAA,EAAAA,MAAA,WAASkB,UAAWC,EAAkBpB,SAAA,EACpCD,EAAAA,EAAAA,KAAA,OAAKoB,UAAWC,EAAwBpB,SAC1B,QAAXwB,GAAmBzB,EAAAA,EAAAA,KAACD,EAAAA,EAAU,KAAMC,EAAAA,EAAAA,KAAA,OAAKiC,IAAKR,EAAQS,IAAKR,OAE9D1B,EAAAA,EAAAA,KAAA,MAAAC,SAAKyB,KACLxB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,YACND,EAAAA,EAAAA,KAAA,QAAAC,SAAO2B,QAET1B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,YACND,EAAAA,EAAAA,KAAA,QAAAC,SAAO0B,WAGH,EAIDQ,EAAgBC,EAAAA,KAAWZ,E,mDC7BxC,SAAgB,WAAa,+BAA+B,GAAK,uBAAuB,GAAK,uBAAuB,OAAS,2BAA2B,aAAe,iCAAiC,OAAS,4B,aCWjN,MAqDA,EArDyCd,IACvC,MAAM,MAAE2B,EAAK,OAAEC,EAAM,MAAEC,EAAK,QAAEC,EAAO,KAAEC,GAAS/B,EAE1CgC,EAASC,KAAKC,KAAKP,EAAQM,KAAKE,IAAIN,EAAO,IAEjD,IAAIO,EAAOH,KAAKE,IAAIJ,EAAOH,EAAQ,GACnC,MAAMS,EAAQJ,KAAKK,IAAIF,EAAgB,EAATR,EAAYI,GAE1CI,EAAOH,KAAKE,IAAIE,EAAiB,EAATT,EAAY,GAGpC,MAAMW,EAAQ,GAEVH,EAAO,GAAGG,EAAMC,KAAK,GAErBJ,EAAO,GAAGG,EAAMC,KAAK,MAEzB,IAAK,IAAIC,EAAaL,EAAMK,GAAcJ,EAAOI,GAAc,EAAGF,EAAMC,KAAKC,GAK7E,OAHIJ,EAAQL,EAAS,GAAGO,EAAMC,KAAK,MAE/BH,EAAQL,GAAQO,EAAMC,KAAKR,IAE7B1C,EAAAA,EAAAA,KAAA,OAAKoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,EAAQ+B,aAAanD,UACvDD,EAAAA,EAAAA,KAAA,MAAIoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,EAAQgC,KAAKpD,SAC7CgD,EAAMK,KAAI,CAACC,EAAQC,KAClBxD,EAAAA,EAAAA,KAAA,MAEEoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAE,CAACD,EAAQoC,SAAqB,OAAXF,GAAmB,CAAClC,EAAQqC,KAAKzD,SAE/EsD,GACCvD,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLM,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAE,CAACD,EAAQsC,QAASJ,IAAWd,GAAQ,CAC/DpB,EAAQuC,OACRvC,EAAQwC,eAEVC,MAAOP,EACPf,QAASA,EAAQvC,SAEhBsD,KAGHvD,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAASM,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,EAAQuC,SAAS3D,SAAC,SAhBzD,OAAXsD,EAAkBA,EAAM,QAAAvB,OAAWwB,SAuB1C,C,uHC7DV,QAAiC,wCAAjC,EAAsF,oC,aCQtF,MAqCA,EArCwBO,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAeC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMC,kBAC/C,KAAE5B,EAAI,WAAE6B,EAAU,KAAExD,EAAI,KAAEyD,GAASL,GACnC,KAAEM,EAAI,WAAEC,IAAeC,EAAAA,EAAAA,IAAmB,CAAEJ,aAAY7B,OAAM3B,OAAMyD,SAE1E,GAAIE,EACF,OAAOzE,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,IAEpB,IAAKH,EAAKI,aACR,OAAO5E,EAAAA,EAAAA,KAAA,OAAAC,SAAK,cASd,OACEC,EAAAA,EAAAA,MAAA,OAAKkB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAAyBpB,SAAA,EAC3DD,EAAAA,EAAAA,KAAA,OAAKoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAAqBpB,SACtDuE,EAAKK,OAAOvB,KAAKwB,IAChBC,EAAAA,EAAAA,eAAC5C,EAAAA,EAAa,IAAK2C,EAAOE,IAAKF,EAAMjD,cAGzC7B,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CACT5C,MAAO6C,OAAOV,EAAKI,cACnBtC,OAAQ,EACRC,MAAO,GACPE,KAAMA,EACND,QAnByB2C,IAC7B,MAAMC,EAAcD,EAAEE,cAAcvB,MAChCoB,OAAOE,IACTpB,GAASsB,EAAAA,EAAAA,IAAW,IAAKpB,EAAczB,KAAMyC,OAAOE,KACtD,MAiBM,E,aCzCV,QAA8B,uCAA9B,EAAuF,2CAAvF,EAA8I,qCAA9I,EAA6L,mCAA7L,EAAmP,4CAAnP,EAAsS,gCAAtS,EAA6U,gCAA7U,EAA6X,yCAA7X,EAAmb,sCC2Enb,EA/DuD1E,IACrD,MAAM,cAAE6E,EAAa,eAAEC,EAAc,SAAEC,EAAQ,cAAEC,EAAa,YAAEC,GAAgBjF,EAChF,OACER,EAAAA,EAAAA,MAAA,QAAM0F,OAAO,GAAGH,SAAUA,EAAUrE,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAAsBpB,SAAA,EACvFC,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAwBpB,SAAA,EACtCD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAS,CAACjF,MAAM,SAASI,KAAK,SAASF,KAAK,OAAOD,SAAU0E,KAC9DvF,EAAAA,EAAAA,KAAA,UAAQoB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAAqBH,GAAG,SAASJ,KAAK,SAAQb,UACnFD,EAAAA,EAAAA,KAAA,OACEQ,OAAO,OACPD,MAAM,OACNuF,QAAQ,MACR5E,GAAG,SACHb,MAAM,6BACND,QAAQ,sBAAqBH,UAE7BD,EAAAA,EAAAA,KAAA,QACES,EAAE,mrBAWVP,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAgBpB,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAASM,UAAWC,EAAuBmB,QAASkD,EAAczF,SAAC,uBAG/E0F,IACCzF,EAAAA,EAAAA,MAAA,OAAKkB,WAAWE,EAAAA,EAAAA,GAAW,GAAI,CAAC,EAAG,CAACD,IAA2BpB,SAAA,EAC7DC,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAmBpB,SAAA,EACjCD,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,QAAOtB,SAAC,WACvBD,EAAAA,EAAAA,KAAA,SACEa,SAAU0E,EACVrE,GAAG,OACHF,KAAK,OACLF,KAAK,SACLkC,IAAK,KACLH,IAAK,KACLzB,UAAWC,EACXJ,aAAa,SAGjBf,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAmBpB,SAAA,EACjCD,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,OAAMtB,SAAC,WACtBC,EAAAA,EAAAA,MAAA,UAAQkB,UAAWC,EAAcR,SAAU2E,EAAgBxE,KAAK,OAAOE,GAAG,OAAMjB,SAAA,EAC9ED,EAAAA,EAAAA,KAAA,UAAQ8D,MAAM,GAAE7D,SAAC,SACjBD,EAAAA,EAAAA,KAAA,UAAQ8D,MAAM,QAAO7D,SAAC,WACtBD,EAAAA,EAAAA,KAAA,UAAQ8D,MAAM,SAAQ7D,SAAC,YACvBD,EAAAA,EAAAA,KAAA,UAAQ8D,MAAM,UAAS7D,SAAC,aACxBD,EAAAA,EAAAA,KAAA,UAAQ8D,MAAM,OAAM7D,SAAC,uBAM1B,ECNX,EAtDiB8F,KACf,MAAM/B,GAAWC,EAAAA,EAAAA,KACXC,GAAeC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMC,kBAC9C2B,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAsB,CAClEC,OAAQ,GACR5B,KAAM,GACNzD,KAAM,MAED6E,EAAaS,IAAkBF,EAAAA,EAAAA,WAAS,GAgC/C,OACEhG,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACqG,EAAiB,CAChBd,cAlB0BJ,IAC9B,MAAM,KAAEnE,EAAI,MAAE8C,GAAUqB,EAAEmB,OAC1BL,GAAoBM,IAAS,IACxBA,EACH,CAACvF,GAAO8C,KACP,EAcC0B,eAXoBL,IACxBc,GAAoBM,IAAS,IACxBA,EACHzF,KAAMqE,EAAEmB,OAAOxC,SACd,EAQC2B,SA/BsBN,IAC1BA,EAAEqB,iBACF,MAAM,OAAEL,EAAM,KAAErF,EAAI,KAAEyD,GAASyB,EAC3BL,EACF3B,GAASsB,EAAAA,EAAAA,IAAW,IAAKpB,EAAcI,WAAY6B,EAAQrF,OAAMyD,OAAM9B,KAAM,MAE7EwD,GAAoBM,IAAS,IAAWA,EAAWzF,KAAM,GAAIyD,KAAM,OACnEP,GAASsB,EAAAA,EAAAA,IAAW,IAAKpB,EAAcI,WAAY6B,EAAQrF,KAAM,GAAIyD,KAAM,GAAI9B,KAAM,KACvF,EAwBIkD,YAAaA,EACbD,cArCoBe,KACxBL,GAAgBT,EAAY,KAsC1B3F,EAAAA,EAAAA,KAAC+D,EAAe,MACZ,C","sources":["components/EmptyImage/EmptyImage.tsx","webpack://movie-portal/./src/components/InputText/InputText.module.scss?b47a","components/InputText/InputText.tsx","webpack://movie-portal/./src/components/MovieCard/MovieCard.module.scss?a853","components/MovieCard/MovieCard.tsx","webpack://movie-portal/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.tsx","webpack://movie-portal/./src/containers/MoviesContainer/MoviesContainer.module.scss?7f39","containers/MoviesContainer/MoviesContainer.tsx","webpack://movie-portal/./src/components/MoviesContolPanel/MoviesContolPanel.module.scss?85d8","components/MoviesContolPanel/MoviesContolPanel.tsx","pages/MainPage/MainPage.tsx"],"sourcesContent":["const EmptyImage = () => (\n  <div>\n    <svg\n      fill=\"#777576\"\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke=\"#777576\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      <path d=\"M30,3.4141,28.5859,2,2,28.5859,3.4141,30l2-2H26a2.0027,2.0027,0,0,0,2-2V5.4141ZM26,26H7.4141l7.7929-7.793,2.3788,2.3787a2,2,0,0,0,2.8284,0L22,19l4,3.9973Zm0-5.8318-2.5858-2.5859a2,2,0,0,0-2.8284,0L19,19.1682l-2.377-2.3771L26,7.4141Z\" />\n      <path d=\"M6,22V19l5-4.9966,1.3733,1.3733,1.4159-1.416-1.375-1.375a2,2,0,0,0-2.8284,0L6,16.1716V6H22V4H6A2.002,2.002,0,0,0,4,6V22Z\" />\n    </svg>\n  </div>\n);\n\nexport default EmptyImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"coolinput\":\"InputText_coolinput__jDaX6\",\"label\":\"InputText_label__YZ9g5\",\"input\":\"InputText_input__PfG3y\"};","import React, { FC, useId } from 'react';\nimport classes from './InputText.module.scss';\nimport { classNames } from '../../shared/lib/classNames';\n\ninterface InputTextProps {\n  label: string;\n  type: React.HTMLInputTypeAttribute;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  name: string; // TODO enum?\n  autoComplete?: React.HTMLInputAutoCompleteAttribute;\n  placeholder?: string;\n  defaultValue?: string;\n  children?: React.ReactNode;\n}\n\nconst InputText: FC<InputTextProps> = (props) => {\n  const { autoComplete, label, onChange, type, placeholder, name, defaultValue, children } = props;\n  const id = useId();\n  return (\n    <div className={classes.coolinput}>\n      <label className={classNames('', {}, [classes.label])} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className={classNames('', {}, [classes.input])}\n        type={type}\n        id={id}\n        autoComplete={autoComplete}\n        onChange={onChange}\n        placeholder={placeholder}\n        name={name}\n        defaultValue={defaultValue}\n      />\n      {children}\n    </div>\n  );\n};\n\nexport default InputText;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"MovieCard_movieLink__1sv41\",\"movieCard\":\"MovieCard_movieCard__-90Pl\",\"posterContainer\":\"MovieCard_posterContainer__GxnM7\"};","import React, { FC } from 'react';\nimport { IMovie } from '../../shared/models/IMovie';\nimport { AppLink } from '../AppLink/AppLink';\nimport classes from './MovieCard.module.scss';\nimport EmptyImage from '../EmptyImage/EmptyImage';\n\ninterface MovieCardProps extends IMovie {}\n\nconst MovieCard: FC<MovieCardProps> = (props) => {\n  const { Poster, Title, Type, Year, imdbID } = props;\n  return (\n    <AppLink to={`/movie/${imdbID}`} className={classes.movieLink}>\n      <article className={classes.movieCard}>\n        <div className={classes.posterContainer}>\n          {Poster === 'N/A' ? <EmptyImage /> : <img src={Poster} alt={Title} />}\n        </div>\n        <h4>{Title}</h4>\n        <div>\n          <span>Year: </span>\n          <span>{Year}</span>\n        </div>\n        <div>\n          <span>Type: </span>\n          <span>{Type}</span>\n        </div>\n      </article>\n    </AppLink>\n  );\n};\n\nexport const MovieCardMemo = React.memo(MovieCard);\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__kdobN\",\"ul\":\"Pagination_ul__WWL1p\",\"li\":\"Pagination_li__TrgUd\",\"button\":\"Pagination_button__knGz5\",\"buttonUsable\":\"Pagination_buttonUsable__tB3lR\",\"active\":\"Pagination_active__4SC-z\"};","import React, { FC } from 'react';\nimport { classNames } from '../../shared/lib/classNames';\nimport classes from './Pagination.module.scss';\n\ninterface PaginationProps {\n  page: number;\n  limit: number;\n  count: number;\n  indent: number;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Pagination: FC<PaginationProps> = (props) => {\n  const { count, indent, limit, onClick, page } = props;\n  // Количество страниц\n  const length = Math.ceil(count / Math.max(limit, 1));\n  // Номера слева и справа относительно активного номера, которые остаются видимыми\n  let left = Math.max(page - indent, 1);\n  const right = Math.min(left + indent * 2, length);\n  // Корректировка когда страница в конце\n  left = Math.max(right - indent * 2, 1);\n\n  // Массив номеров\n  const items = [];\n  // Первая страница всегда нужна\n  if (left > 1) items.push(1);\n  // Пропуск\n  if (left > 2) items.push(null);\n  // Последовательность страниц\n  for (let pageNumber = left; pageNumber <= right; pageNumber += 1) items.push(pageNumber);\n  // Пропуск\n  if (right < length - 1) items.push(null);\n  // Последняя страница\n  if (right < length) items.push(length);\n  return (\n    <div className={classNames('', {}, [classes.pagination])}>\n      <ul className={classNames('', {}, [classes.ul])}>\n        {items.map((number, index) => (\n          <li\n            key={number !== null ? number : `null-${index}`}\n            className={classNames('', { [classes.pointer]: number !== null }, [classes.li])}\n          >\n            {number ? (\n              <button\n                type=\"button\"\n                className={classNames('', { [classes.active]: number === page }, [\n                  classes.button,\n                  classes.buttonUsable,\n                ])}\n                value={number}\n                onClick={onClick}\n              >\n                {number}\n              </button>\n            ) : (\n              <button type=\"button\" className={classNames('', {}, [classes.button])}>\n                ...\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MoviesContainer_movieContainer__vg+ct\",\"moviesList\":\"MoviesContainer_moviesList__iToc1\"};","import { useAppDispatch, useAppSelector } from '../../shared/hooks/redux';\nimport { useFindMoviesQuery } from '../../services/OMDbAPIService';\nimport { MovieCardMemo } from '../../components/MovieCard/MovieCard';\nimport { classNames } from '../../shared/lib/classNames';\nimport Pagination from '../../components/Pagination/Pagination';\nimport { setCatalog } from '../../store/reducers/CatalogSlice';\nimport PageLoader from '../../widgets/PageLoader/PageLoader';\nimport classes from './MoviesContainer.module.scss';\n\nconst MoviesContainer = () => {\n  const dispatch = useAppDispatch();\n  const catalogState = useAppSelector((state) => state.catalogReducer);\n  const { page, searchTerm, type, year } = catalogState;\n  const { data, isFetching } = useFindMoviesQuery({ searchTerm, page, type, year });\n\n  if (isFetching) {\n    return <PageLoader />;\n  }\n  if (!data.totalResults) {\n    return <div>No movies</div>;\n  }\n  const handleClickPagination = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const buttonValue = e.currentTarget.value;\n    if (Number(buttonValue)) {\n      dispatch(setCatalog({ ...catalogState, page: Number(buttonValue) }));\n    }\n  };\n\n  return (\n    <div className={classNames('', {}, [classes.movieContainer])}>\n      <div className={classNames('', {}, [classes.moviesList])}>\n        {data.Search.map((movie) => (\n          <MovieCardMemo {...movie} key={movie.imdbID} />\n        ))}\n      </div>\n      <Pagination\n        count={Number(data.totalResults)}\n        indent={2}\n        limit={10}\n        page={page}\n        onClick={handleClickPagination}\n      />\n    </div>\n  );\n};\n\nexport default MoviesContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"controlForm\":\"MoviesContolPanel_controlForm__vAprw\",\"searchContainer\":\"MoviesContolPanel_searchContainer__Fe9uA\",\"searchBtn\":\"MoviesContolPanel_searchBtn__rhxEs\",\"filters\":\"MoviesContolPanel_filters__FuYYN\",\"filtersContainer\":\"MoviesContolPanel_filtersContainer__WrdXK\",\"year\":\"MoviesContolPanel_year__PIhR-\",\"type\":\"MoviesContolPanel_type__Bt5TE\",\"filtersButton\":\"MoviesContolPanel_filtersButton__iYMIf\",\"filterItem\":\"MoviesContolPanel_filterItem__qh14o\"};","import React, { FC } from 'react';\nimport InputText from '../InputText/InputText';\nimport classes from './MoviesContolPanel.module.scss';\nimport { classNames } from '../../shared/lib/classNames';\n\ninterface MoviesContolPanelProps {\n  onChangeInput: React.ChangeEventHandler<HTMLInputElement>;\n  onChangeSelect: React.ChangeEventHandler<HTMLSelectElement>;\n  onSubmit: (e: React.FormEvent) => void;\n  onShowFilters: () => void;\n  showFilters: boolean;\n}\n\nconst MoviesContolPanel: FC<MoviesContolPanelProps> = (props) => {\n  const { onChangeInput, onChangeSelect, onSubmit, onShowFilters, showFilters } = props;\n  return (\n    <form action=\"\" onSubmit={onSubmit} className={classNames('', {}, [classes.controlForm])}>\n      <div className={classes.searchContainer}>\n        <InputText label=\"Search\" name=\"search\" type=\"text\" onChange={onChangeInput} />\n        <button className={classNames('', {}, [classes.searchBtn])} id=\"search\" type=\"submit\">\n          <svg\n            height=\"25px\"\n            width=\"25px\"\n            version=\"1.1\"\n            id=\"Capa_1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 176.292 176.292\"\n          >\n            <path\n              d=\"M24.027,46.333c-4.32,16.125-2.103,32.968,6.244,47.426c11.132,19.281,31.892,31.259,54.178,31.259\n\tc8.411,0,16.745-1.729,24.474-5.03l32.507,56.303l12.99-7.5l-32.508-56.305c11.174-8.353,19.19-20.117,22.856-33.802\n\tc4.32-16.125,2.103-32.968-6.244-47.426C127.393,11.978,106.633,0,84.347,0C73.435,0,62.647,2.899,53.148,8.383\n\tC38.69,16.73,28.349,30.208,24.027,46.333z M84.347,15c16.944,0,32.727,9.104,41.188,23.759c6.344,10.988,8.029,23.789,4.745,36.044\n\tc-3.283,12.255-11.143,22.499-22.131,28.842c-7.222,4.169-15.416,6.373-23.699,6.373c-16.944,0-32.727-9.104-41.188-23.759\n\tc-6.344-10.988-8.029-23.788-4.745-36.043C41.801,37.96,49.66,27.717,60.648,21.373C67.87,17.204,76.064,15,84.347,15z\"\n            />\n          </svg>\n        </button>\n      </div>\n\n      <div className={classes.filters}>\n        <button type=\"button\" className={classes.filtersButton} onClick={onShowFilters}>\n          Additional filters\n        </button>\n        {showFilters && (\n          <div className={classNames('', {}, [classes.filtersContainer])}>\n            <div className={classes.filterItem}>\n              <label htmlFor=\"year:\">Year:</label>\n              <input\n                onChange={onChangeInput}\n                id=\"year\"\n                name=\"year\"\n                type=\"number\"\n                min={1900}\n                max={2024}\n                className={classes.year}\n                defaultValue=\"\"\n              />\n            </div>\n            <div className={classes.filterItem}>\n              <label htmlFor=\"type\">Type:</label>\n              <select className={classes.type} onChange={onChangeSelect} name=\"type\" id=\"type\">\n                <option value=\"\">All</option>\n                <option value=\"movie\">Movie</option>\n                <option value=\"series\">Series</option>\n                <option value=\"episode\">Episode</option>\n                <option value=\"game\">Game</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default MoviesContolPanel;\n","import { useState } from 'react';\nimport MoviesContainer from '../../containers/MoviesContainer/MoviesContainer';\nimport { useAppSelector, useAppDispatch } from '../../shared/hooks/redux';\nimport { setCatalog } from '../../store/reducers/CatalogSlice';\nimport MoviesContolPanel from '../../components/MoviesContolPanel/MoviesContolPanel';\n\ninterface SearchState {\n  search: string;\n  year: string;\n  type: string;\n}\n\nconst MainPage = () => {\n  const dispatch = useAppDispatch();\n  const catalogState = useAppSelector((state) => state.catalogReducer);\n  const [searchFormState, setSearchFormState] = useState<SearchState>({\n    search: '',\n    year: '',\n    type: '',\n  });\n  const [showFilters, setShowFilters] = useState(false);\n\n  const handleShowFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  const handleSumbitSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { search, type, year } = searchFormState;\n    if (showFilters) {\n      dispatch(setCatalog({ ...catalogState, searchTerm: search, type, year, page: 1 }));\n    } else {\n      setSearchFormState((prevState) => ({ ...prevState, type: '', year: '' }));\n      dispatch(setCatalog({ ...catalogState, searchTerm: search, type: '', year: '', page: 1 }));\n    }\n  };\n\n  const handleSearchFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setSearchFormState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleChangeType = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSearchFormState((prevState) => ({\n      ...prevState,\n      type: e.target.value,\n    }));\n  };\n\n  return (\n    <div>\n      <MoviesContolPanel\n        onChangeInput={handleSearchFormChange}\n        onChangeSelect={handleChangeType}\n        onSubmit={handleSumbitSearch}\n        showFilters={showFilters}\n        onShowFilters={handleShowFilters}\n      />\n      <MoviesContainer />\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":["EmptyImage","_jsx","children","_jsxs","fill","viewBox","xmlns","stroke","width","height","d","props","autoComplete","label","onChange","type","placeholder","name","defaultValue","id","useId","className","classes","classNames","htmlFor","MovieCard","Poster","Title","Type","Year","imdbID","AppLink","to","concat","src","alt","MovieCardMemo","React","count","indent","limit","onClick","page","length","Math","ceil","max","left","right","min","items","push","pageNumber","pagination","ul","map","number","index","pointer","li","active","button","buttonUsable","value","MoviesContainer","dispatch","useAppDispatch","catalogState","useAppSelector","state","catalogReducer","searchTerm","year","data","isFetching","useFindMoviesQuery","PageLoader","totalResults","Search","movie","_createElement","key","Pagination","Number","e","buttonValue","currentTarget","setCatalog","onChangeInput","onChangeSelect","onSubmit","onShowFilters","showFilters","action","InputText","version","MainPage","searchFormState","setSearchFormState","useState","search","setShowFilters","MoviesContolPanel","target","prevState","preventDefault","handleShowFilters"],"sourceRoot":""}